【評価対象データ】
・対象期間: 直近3年分
・使用特徴量:
  - 馬齢（BAREI）
  - 性別コード（SEIBETSU_CODE）
  - 馬体重（BATAIJU）
  - 負担重量（FUTAN_JURYO）
  - 単勝人気順（TANSHO_NINKIJUN）
  - 距離（KYORI）
  - 芝/ダート（トラックコード）（TRACK_CODE）
  - 頭数（SHUSSO_TOSU）
  - 騎手3着以内率（KISHU_3IN_RATE）
  - 馬場状態（TENKO_CODE）
  - 調教師3着以内率（CHOKYOSHI_3IN_RATE）
  - 父系統ID（FATHER_LINEAGE）
  - 馬過去5走3着以内率（UMA_5R_3IN_RATE）
  - コース適性3着以内率（COURSE_3IN_RATE）
  - コース×馬過去5走3着以内率（COURSE_UMA_5R_3IN_RATE）
  - 父系統ターゲットエンコーディング（FATHER_LINEAGE_TE）
  - トラックコードターゲットエンコーディング（TRACK_CODE_TE）
  - 馬体重×距離（BATAIJU_KYORI）
  - 馬齢×負担重量（BAREI_FUTAN_JURYO）
  - 騎手×調教師ターゲットエンコーディング（KISHU_CHOKYOSHI_TE）
  - 馬×コースターゲットエンコーディング（UMA_COURSE_TE）
  - レース間隔（日数）（RACE_KANKAKU）
  - 馬場状態（良=1, それ以外=0）（TENKO_FINE）

--- 評価結果 ---
Accuracy: 0.8994
F1 Score: 0.8077
              precision    recall  f1-score   support

           0       0.99      0.88      0.93      6165
           1       0.69      0.97      0.81      1715

    accuracy                           0.90      7880
   macro avg       0.84      0.93      0.87      7880
weighted avg       0.93      0.90      0.90      7880

--- PRカーブからF1最大化となる最適閾値: 0.617 ---
--- 最適閾値での再評価 ---
Accuracy: 0.9527
F1 Score: 0.8857
              precision    recall  f1-score   support

           0       0.96      0.98      0.97      6165
           1       0.93      0.84      0.89      1715

    accuracy                           0.95      7880
   macro avg       0.95      0.91      0.93      7880
weighted avg       0.95      0.95      0.95      7880


--- GPT-4.1からの改善アドバイス ---
DQNによる競馬3着以内予測モデルの評価結果・各種グラフから、モデル改善のためのアドバイスをまとめます。

1. **クラス不均衡へのさらなる配慮**
   - confusion_matrixやPRカーブからも分かる通り、3着以内（positiveクラス）は全体の約22%程度で不均衡です。閾値調整でRecall/Precisionトレードオフ改善できているものの、まださらなる不均衡対策（損失関数の重み付け、サンプリング、Focal Loss等）を検討すると良いです。

2. **特徴量の見直し・追加**
   - 入力特徴量は多様ですが、相関が高い・冗長な特徴量が混在している可能性があります。特徴量重要度（Permutation Importance等）を確認し、影響の小さい特徴量は削減、逆に血統・コース傾向・脚質等の追加も検討しましょう。
   - 特に「馬体重×距離」「馬齢×負担重量」などの交互作用項以外にも、馬ごとの連戦間隔変化や、過去レースの天候・馬場状態との相性など新たな組み合わせも有効です。

3. **モデルの複雑性調整と正則化**
   - learning_curveから大きな過学習/未学習は見られませんが、DQNの表現力が過剰であれば、ドロップアウト・L2正則化の強化や、ネットワーク層数・ノード数削減も一案です。

4. **出力閾値の最適化運用**
   - PRカーブ・ROC曲線から最適閾値で大幅にF1・精度が改善しています。今後もデータが変化した場合は定期的に最適閾値を再調整しましょう。

5. **外部情報の活用**
   - 騎手・調教師データのターゲットエンコーディング以外に、天候や直前オッズ、競馬新聞評価、SNS言及など外部特徴量も活用可能です。

6. **予測根拠の可視化**
   - SHAP等で「なぜその馬が3着以内と判定されたか」を可視化し、現場やエンドユーザーへの説明力を高めましょう。

7. **モデルアンサンブル・他手法の検討**
   - DQN以外にもLightGBMやCatBoost等のツリー系、あるいは他の深層学習手法とのアンサンブルで安定度向上を図れます。

---

【まとめ】
現状、最適閾値調整でF1=0.88/精度0.95と高い性能ですが、クラス不均衡対策の強化、特徴量の見直し・追加、外部データ活用、アンサンブル化などで更なる精度・実用性向上が期待できます。また、予測根拠の可視化や運用時の閾値最適化も忘れずに実施しましょう。
