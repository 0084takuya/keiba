【評価対象データ】
・対象期間: 直近3年分
・使用特徴量:
  - 馬齢（BAREI）
  - 性別コード（SEIBETSU_CODE）
  - 馬体重（BATAIJU）
  - 負担重量（FUTAN_JURYO）
  - 単勝人気順（TANSHO_NINKIJUN）
  - 距離（KYORI）
  - 芝/ダート（トラックコード）（TRACK_CODE）
  - 頭数（SHUSSO_TOSU）
  - 騎手3着以内率（KISHU_3IN_RATE）
  - 馬場状態（TENKO_CODE）
  - 調教師3着以内率（CHOKYOSHI_3IN_RATE）
  - 父系統ID（FATHER_LINEAGE）
  - 馬過去5走3着以内率（UMA_5R_3IN_RATE）
  - コース適性3着以内率（COURSE_3IN_RATE）
  - コース×馬過去5走3着以内率（COURSE_UMA_5R_3IN_RATE）
  - 父系統ターゲットエンコーディング（FATHER_LINEAGE_TE）
  - トラックコードターゲットエンコーディング（TRACK_CODE_TE）
  - 馬体重×距離（BATAIJU_KYORI）
  - 馬齢×負担重量（BAREI_FUTAN_JURYO）
  - 騎手×調教師ターゲットエンコーディング（KISHU_CHOKYOSHI_TE）
  - 馬×コースターゲットエンコーディング（UMA_COURSE_TE）
  - レース間隔（日数）（RACE_KANKAKU）
  - 馬場状態（良=1, それ以外=0）（TENKO_FINE）

--- 評価結果 ---
Accuracy: 0.9537
F1 Score: 0.8881
              precision    recall  f1-score   support

           0       0.96      0.98      0.97      6165
           1       0.94      0.84      0.89      1715

    accuracy                           0.95      7880
   macro avg       0.95      0.91      0.93      7880
weighted avg       0.95      0.95      0.95      7880

--- PRカーブからF1最大化となる最適閾値: 0.450 ---
--- 最適閾値での再評価 ---
Accuracy: 0.9575
F1 Score: 0.9065
              precision    recall  f1-score   support

           0       0.98      0.96      0.97      6165
           1       0.87      0.95      0.91      1715

    accuracy                           0.96      7880
   macro avg       0.93      0.95      0.94      7880
weighted avg       0.96      0.96      0.96      7880


--- GPT-4.1からの改善アドバイス ---
現状のDQNモデル評価結果・4つのグラフ画像（ROC曲線・PR曲線・学習曲線・混同行列）を踏まえ、モデル改善のためのアドバイスを以下に簡潔にまとめます。

---

## 1. 評価指標・現状分析
- **全体精度・F1スコアは非常に高い（F1=0.90超）**  
  →分類性能は高い水準。ただし、データバランスや閾値調整の影響もみる必要あり。

- **最適閾値による再評価でRecall（1:3着以内）の向上、Precisionの低下**  
  →閾値調整で3着以内の馬の検出率（Recall）が大きく改善。  
  →一方でPrecision低下（False Positive増加）に注意。

- **混同行列より「3着以内(1)」の検出ミスがまだ一定数存在**
  →Recallを上げるとFalse Positiveも増える傾向。

- **ROC曲線・PR曲線ともにAUC高く、識別力は高い**
  →ただしPR曲線からみると、3着以内（1）クラスに対しPrecision-Recallのトレードオフがやや大きい。

- **学習曲線から過学習傾向は小さいが、性能上昇が頭打ち気味**
  →追加学習やデータ増強での改善余地。

---

## 2. 特徴量・入力設計へのアドバイス
- **カテゴリ変数エンコーディングの工夫**
  - 「父系統ID」や「トラックコード」等はターゲットエンコーディング利用済みだが、他のカテゴリ変数も同様に検討。
  - 既存エンコーディングがリークを起こしていないか要確認。

- **特徴量組み合わせの追加**
  - 騎手・調教師・馬等の交互作用（interaction）特徴量をさらに増やす。
  - 例：「騎手×コース」「調教師×馬場状態」など。

- **馬の過去成績の時系列的特徴の導入**
  - 直近5走の「連続成績」や「成績トレンド」などを特徴量化。
  - LSTM/GRU等の時系列モデルの併用も検討。

- **環境や外的要因特徴の追加**
  - 天候、当日の馬体重増減、馬場変更など、レース直前に変動する情報も追加。

---

## 3. モデル構造・学習方法の改善案
- **DQN以外のモデルとのアンサンブル**
  - ランダムフォレストやLightGBM/XGBoostなど決定木系モデルとのアンサンブルで安定感や解釈性向上が期待できる。

- **コストセンシティブ学習/重み付け損失**
  - 3着以内（1）クラスのRecallをより重視したい場合、損失関数にクラス重みを付与。

- **データのアンダー/オーバーサンプリング**
  - 特に3着以内（1）のサンプルが少ない場合、SMOTEなどでバランス改善。

- **ハイパーパラメータ最適化**
  - 学習率・batch size・探索ノイズ・ネットワーク構造の最適化をGridSearch/Optuna等で再検討。

---

## 4. 評価・運用面の工夫
- **閾値最適化を業務要件に合わせて調整**
  - 期待値（馬券の配当）やリスク許容度に応じた閾値選定・カスタマイズ。

- **モデル解釈の強化**
  - SHAP/LIME等で「なぜその馬を3着以内と予測したか」を可視化。
  - ユーザー説明用の特徴量重要度ランキングを提供。

- **継続的なモデル再学習**
  - 新しいレース結果・トレンドを反映し定期的にモデル再学習。

---

## まとめ（優先
