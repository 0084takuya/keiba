【評価対象データ】
・対象期間: 直近1080日分
・使用特徴量:
  - 馬齢（BAREI）
  - 性別コード（SEIBETSU_CODE）
  - 馬体重（BATAIJU）
  - 負担重量（FUTAN_JURYO）
  - 単勝人気順（TANSHO_NINKIJUN）
  - 枠順（WAKUBAN）
  - 距離（KYORI）
  - 芝/ダート（トラックコード）（TRACK_CODE）
  - 頭数（SHUSSO_TOSU）
  - 騎手3着以内率（KISHU_3IN_RATE）
  - 馬場状態（TENKO_CODE）
  - 調教師3着以内率（CHOKYOSHI_3IN_RATE）
  - 父系統ID（FATHER_LINEAGE）
  - 馬過去5走3着以内率（UMA_5R_3IN_RATE）
  - コース適性3着以内率（COURSE_3IN_RATE）
  - コース×馬過去5走3着以内率（COURSE_UMA_5R_3IN_RATE）
  - 父系統ターゲットエンコーディング（FATHER_LINEAGE_TE）
  - トラックコードターゲットエンコーディング（TRACK_CODE_TE）
  - 馬体重×距離（BATAIJU_KYORI）
  - 馬齢×負担重量（BAREI_FUTAN_JURYO）
  - 騎手×調教師ターゲットエンコーディング（KISHU_CHOKYOSHI_TE）
  - 馬×コースターゲットエンコーディング（UMA_COURSE_TE）
  - レース間隔（日数）（RACE_KANKAKU）
  - 馬場状態（良=1, それ以外=0）（TENKO_FINE）

--- 評価結果 ---
Accuracy: 0.9307
F1 Score: 0.8140
              precision    recall  f1-score   support

           0       0.92      1.00      0.96      6165
           1       0.98      0.70      0.81      1715

    accuracy                           0.93      7880
   macro avg       0.95      0.85      0.89      7880
weighted avg       0.93      0.93      0.93      7880

--- PRカーブからF1最大化となる最適閾値: 0.439 ---
--- 最適閾値での再評価 ---
Accuracy: 0.9671
F1 Score: 0.9257
              precision    recall  f1-score   support

           0       0.98      0.97      0.98      6165
           1       0.91      0.94      0.93      1715

    accuracy                           0.97      7880
   macro avg       0.95      0.96      0.95      7880
weighted avg       0.97      0.97      0.97      7880


--- GPT-4.1からの改善アドバイス ---
モデルの評価結果と4つのグラフ（ROC曲線、PR曲線、学習曲線、混同行列）を踏まえて、以下の観点で改善アドバイスを簡潔にまとめます。

---

### 1. 評価指標・モデル性能について

- **最適閾値調整後の精度・F1スコアが非常に高い**（精度0.967、F1 0.926）ですが、これはターゲット（3着以内）が少数クラスの場合、単なるクラス不均衡の影響を受けていないか注意が必要です。
- **混同行列より「1」のリコール・精度ともに高水準**で、実運用でも実用的なレベルに達していると考えられます。
- **ROC曲線・PR曲線ともにモデルの分離性能は高い**ですが、PR曲線は少数クラスの性能評価により敏感です。今後もF1やAUC-PRを重視しましょう。

---

### 2. 特徴量について（Feature Engineering）

- 現状、多数のターゲットエンコーディングや交互作用特徴量を導入しており、**情報量・多様性は十分**です。
- ただし、**「騎手・調教師・馬」などID系特徴量のターゲットエンコーディングはリークのリスク**があるため、学習時に未来データが混ざっていないか再確認してください。
- **馬場状態やトラック状態のカテゴリ変数の取り扱い**（ダミー変数化 or 埋め込み層活用など）も見直す余地があります。

---

### 3. モデル構造・学習面

- **学習曲線に過学習傾向が見られる場合**（train/val間に差がある場合）、正則化・ドロップアウト・EarlyStoppingなどの導入を検討してください。
- **DQN（Deep Q-Network）を用いていますが、分類問題であればDNNやCatBoost/LightGBM等の勾配ブースティング木系モデルと比較検証**することも推奨します。
- **学習データの分布ズレや時系列リークがないか**（特に競馬データは時系列依存が強いので）再確認してください。

---

### 4. その他の改善ポイント

- **誤分類したサンプルの分析（混同行列から）**  
  例えば、3着以内を外した馬の特徴や、予測ミスしたレース条件に偏りがないか可視化・分析しましょう。
- **追加特徴量案**  
  - 当日のオッズや調教タイム、パドック情報など、「直前情報」が入ると更に精度が向上する可能性があります。
  - 距離実績・コース適性を多角的に表現した特徴量も検討する価値あり。
- **モデルの説明性向上**  
  - SHAP値やPermutation Importance等で、モデルがどの特徴量に強く依存しているか可視化し、現場知見と照らし合わせて妥当性確認を。
- **本番運用前の再評価**  
  - テストセットが過去データになっていないか、最新レースでのテストも必ず行ってください。

---

## まとめ

- 高精度だが、特徴量リーク・過学習・分布ズレ・時系列性に要注意
- 誤分類サンプル分析や追加特徴量の検討
- 他アルゴリズムとの比較・モデル解釈性の強化
- 本番環境での再現性検証

これらを順に進めることで、さらに堅牢かつ汎用性のある競馬予測モデルに進化できます。
