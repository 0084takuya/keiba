【評価対象データ】
・対象期間: 直近3年分
・使用特徴量:
  - 馬齢（BAREI）
  - 性別コード（SEIBETSU_CODE）
  - 馬体重（BATAIJU）
  - 負担重量（FUTAN_JURYO）
  - 単勝人気順（TANSHO_NINKIJUN）
  - 距離（KYORI）
  - 芝/ダート（トラックコード）（TRACK_CODE）
  - 頭数（SHUSSO_TOSU）
  - 騎手3着以内率（KISHU_3IN_RATE）
  - 馬場状態（TENKO_CODE）
  - 調教師3着以内率（CHOKYOSHI_3IN_RATE）
  - 父系統ID（FATHER_LINEAGE）
  - 馬過去5走3着以内率（UMA_5R_3IN_RATE）
  - コース適性3着以内率（COURSE_3IN_RATE）
  - コース×馬過去5走3着以内率（COURSE_UMA_5R_3IN_RATE）
  - 父系統ターゲットエンコーディング（FATHER_LINEAGE_TE）
  - トラックコードターゲットエンコーディング（TRACK_CODE_TE）
  - 馬体重×距離（BATAIJU_KYORI）
  - 馬齢×負担重量（BAREI_FUTAN_JURYO）
  - 騎手×調教師ターゲットエンコーディング（KISHU_CHOKYOSHI_TE）
  - 馬×コースターゲットエンコーディング（UMA_COURSE_TE）
  - レース間隔（日数）（RACE_KANKAKU）
  - 馬場状態（良=1, それ以外=0）（TENKO_FINE）

--- 評価結果 ---
Accuracy: 0.9557
F1 Score: 0.9045
              precision    recall  f1-score   support

           0       0.99      0.95      0.97      6165
           1       0.85      0.96      0.90      1715

    accuracy                           0.96      7880
   macro avg       0.92      0.96      0.94      7880
weighted avg       0.96      0.96      0.96      7880

--- PRカーブからF1最大化となる最適閾値: 0.519 ---
--- 最適閾値での再評価 ---
Accuracy: 0.9617
F1 Score: 0.9149
              precision    recall  f1-score   support

           0       0.98      0.97      0.98      6165
           1       0.89      0.95      0.91      1715

    accuracy                           0.96      7880
   macro avg       0.94      0.96      0.95      7880
weighted avg       0.96      0.96      0.96      7880


--- GPT-4.1からの改善アドバイス ---
モデル評価結果と4つのグラフ（ROC曲線, PR曲線, 学習曲線, 混同行列）を踏まえ、以下のような改善アドバイスをまとめます。

### 1. 現状のモデル評価概要
- **精度・F1スコアともに高水準（Accuracy: 0.96, F1: 0.91）**
  - 特に3着以内（クラス1）に対するRecallが高く（0.95）、Precisionも0.89を超えているため、実運用水準としてもかなり優秀です。
- **ROC曲線・PR曲線**
  - ROC曲線のAUCが高く、PRカーブも理想的な形状なので、クラス不均衡の影響も抑えられている。
  - F1最大化の閾値調整でさらに精度・F1が向上しており、閾値最適化は適切に行われている。
- **学習曲線**
  - 学習・検証スコアが高く、過学習の兆候は小さい。学習データ追加での大幅な改善余地は限定的。
- **混同行列**
  - 偽陽性・偽陰性ともにバランス良く抑えられている（特にクラス1のRecallが高い）。

---

### 2. モデル改善のための具体的アドバイス

#### A. 特徴量のさらなる工夫
- **新規特徴量の導入**
  - 既存特徴量は充実しているが、例えば「当該レース条件での馬主・生産者成績」「厩舎の当該競馬場成績」など、追加でターゲットエンコーディングできる観点を探索。
  - レース当日の「馬体重変動」「パドック評価（外部情報）」など、直前情報も可能なら追加。
- **特徴量の組み合わせ・非線形変換**
  - 既存のクロス特徴（馬体重×距離など）は良いアプローチ。更に他の組み合わせ（騎手×馬場状態、人気順×過去成績など）も追加検討。

#### B. モデル・ハイパーパラメータの最適化
- **DQNのネットワークアーキテクチャ見直し**
  - 層数やノード数、活性化関数、ドロップアウト率の最適化。現状過学習は少ないが、さらに汎化性を高めたい場合はバッチノーマライゼーションなども検討。
- **異なるアンサンブル手法のテスト**
  - DQN単体以外に、GBDT系やStacking等のアンサンブルを加えると、わずかながら精度向上が見込める場合あり。

#### C. データの質的向上
- **外れ値・ノイズデータの見直し**
  - データクリーニングで明らかに異常値を除外、もしくは正規化・Winsorizing等でロバスト性を高める。
- **クロスバリデーションの徹底**
  - 時系列データの場合はリーク防止のため、レース日付でFold分割するなどの工夫を。

#### D. 予測活用・運用面の工夫
- **確信度スコアの活用**
  - 閾値調整によるPrecision/Recallトレードオフを、用途（馬券種やリスク許容度）ごとに最適化。
- **解釈性の向上**
  - SHAP値やPermutation Importanceで「的中に寄与した特徴量」を可視化し、実際の馬券検討・現場説明に活用。

---

### 3. 追加的な分析視点
- **誤分類ケース（混同行列のエラー分析）**
  - 特に「クラス1の偽陰性（3着以内なのに予測できなかった馬）」の特徴を深掘りし、どのようなパターンで取りこぼしているかを分析。予測パターンの偏りがないか確認。

