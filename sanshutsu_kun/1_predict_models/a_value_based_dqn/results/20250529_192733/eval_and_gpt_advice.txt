【評価対象データ】
・対象期間: 直近90日分
・使用特徴量:
  - 馬齢（BAREI）
  - 性別コード（SEIBETSU_CODE）
  - 馬体重（BATAIJU）
  - 直近体重変化（BATAIJU_DIFF）
  - 負担重量（FUTAN_JURYO）
  - 枠順（WAKUBAN）
  - 距離（KYORI）
  - 芝/ダート（トラックコード）（TRACK_CODE）
  - 頭数（SHUSSO_TOSU）
  - 騎手3着以内率（KISHU_3IN_RATE）
  - 馬場状態（TENKO_CODE）
  - 調教師3着以内率（CHOKYOSHI_3IN_RATE）
  - 父系統ID（FATHER_LINEAGE）
  - 馬体重×距離（BATAIJU_KYORI）
  - 馬齢×負担重量（BAREI_FUTAN_JURYO）
  - レース間隔（日数）（RACE_KANKAKU）
  - 馬場状態（良=1, それ以外=0（TENKO_FINE）
  - 前走一着馬との秒数差（ZENSHO_ICHIAKUMA_SA）
  - 前走逆順順位（ZENSHO_GYAKUJUN）

--- 評価結果 ---
Accuracy: 0.7945
F1 Score: 0.5980
              precision    recall  f1-score   support

           0       0.78      0.96      0.86       531
           1       0.87      0.46      0.60       267

    accuracy                           0.79       798
   macro avg       0.82      0.71      0.73       798
weighted avg       0.81      0.79      0.77       798

--- PRカーブからF1最大化となる最適閾値: 0.425 ---
--- 最適閾値での再評価 ---
Accuracy: 0.6905
F1 Score: 0.6746
              precision    recall  f1-score   support

           0       0.96      0.56      0.70       531
           1       0.52      0.96      0.67       267

    accuracy                           0.69       798
   macro avg       0.74      0.76      0.69       798
weighted avg       0.82      0.69      0.69       798


--- GPT-4.1からの改善アドバイス ---
モデル評価・各種グラフ（ROC, PR, Learning curve, 混同行列）を踏まえた改善アドバイス
---

### 1. モデル評価結果のポイント
- **初期閾値（0.5）**
  - 精度: 0.7945、F1: 0.5980
  - クラス1（3着以内）のRecall: 0.46（低い）
  - クラス0（着外）のPrecision/Recallが高く、Negative（着外）に強いバイアス

- **F1最適化閾値（0.425）**
  - 精度: 0.6905、F1: 0.6746
  - クラス1（3着以内）のRecall: 0.96（高い）が、Precision: 0.52（低い）
  - Positive（3着以内）の取りこぼしは大幅に減ったが、False Positiveが増加

- **混同行列**
  - クラス不均衡（3着以内＝少数）：Negativeに寄りやすい
  - 閾値調整でRecallとPrecisionのトレードオフが非常に大きい

---

### 2. グラフの示唆

- **ROCカーブ**  
  → モデルはAUCが比較的高い（線形性が高い）。ただし、閾値による感度/特異度のトレードオフが顕著。

- **PRカーブ**  
  → Positiveクラス（3着以内）の分布が少なく、PRカーブも低め。つまり、実運用で3着以内を高精度に当てるのは難しい（Precisionが上がりにくい）。

- **Learning Curve**  
  → トレーニング/バリデーション間に大きな乖離はないが、やや高めのバイアス。  
  → データ量増加で大幅な改善は難しそう。モデル複雑度がやや足りていない可能性。

- **混同行列**  
  → 0.425閾値ではFalse Positive（外れ馬を3着に予測）がかなり増加。

---

### 3. 改善アドバイス

#### 【A】特徴量・データ面
1. **新規特徴量の追加/工夫**
   - 馬ごとの連対率や過去レースの詳細な傾向（コース適性、成長曲線など）
   - レースごとの枠順有利不利や展開情報
   - 馬主・厩舎・生産牧場情報
   - レース直前のオッズや人気順
   - トラックバイアス（当日の馬場傾向など）

2. **クラス不均衡対策**
   - アンダーサンプリングやオーバーサンプリング（SMOTE等）
   - 損失関数に重み付け（class_weight、focal lossなど）

#### 【B】モデル構造・学習面
3. **モデルの複雑度向上**
   - DQNのネットワーク層を深く・Wide化
   - 他のモデル（ツリー系・Boosting系・NN系）の検証（アンサンブルも視野に）

4. **閾値最適化の継続**
   - 運用目的によって閾値や目的関数（Precision重視/F1重視など）を明確化
   - ROC・PRカーブを使い、事前に運用KPIに合わせた閾値選択

5. **特徴量重要度分析**
   - SHAPやPermutation Importancesによる重要特徴量の再評価
   - モデルの「なぜ外す/当たるか」の見える化と新たな特徴量設計

#### 【C】予測運用・評価面
6. **メトリクスの多様化**
   - F1だけでなく、Precision/Recall@Top-N、AUC、Gain曲線なども評価
   - 実運用に即した指標（例: 1レースで何頭予想・的中率/回収率）

7. **クロスバリデーション・リーク防止確認**
   - 時系列リークや情報リークの
